# Backbone helpers

snippet bbc "Backbone Collection" w
Backbone.Collection.extend({
	${1} 
});
endsnippet

snippet bbm "Backbone Model" w
Backbone.Model.extend({
	${1} 
});
endsnippet

snippet bbr "Backbone Router" w
Backbone.Router.extend({
	${1} 
});
endsnippet

snippet bbv "Backbone View" w
Backbone.View.extend({
	${1} 
});
endsnippet

snippet init "initialize" w
initialize: function() {
	${1}
}
endsnippet

# Node

snippet writeHead "Write header" w 
writeHead(${1:200}, {'Content-Type': ${2:'text/plain'}});
endsnippet

# RequireJS

snippet def "require.js define block (no dependencies)"
define(function(){
	${1}
	return {
	};
});
endsnippet

snippet def "require.js define block (with dependencies)"
define([
	${1}
], 
function(${2}){
	return {
	};
});
endsnippet

snippet def "require.js define block (with backbone.js dependencies)"
define([
	'jquery',
	'underscore',
	'backbone'
], 
function($, _, Backbone){
	return {
		${1}
	};
});
endsnippet

snippet req "require.js block"
require([${1}], function(${2}){
});
endsnippet

snippet reqconf "require.js config block"
require.config({
	${1}
});
endsnippet

# General

snippet bfn "Anonymous function declaration (wrapped with bind)" w
(function(${1}) { ${2} }).bind(this)
endsnippet

snippet ci "Console.info()" w
console.info(${1});
endsnippet

snippet cl "Console.log()" w
console.log(${1});
endsnippet

snippet efn "Anonymous function expression" w
${1:var} ${2:fn}: function() { 
	${3} 
}
endsnippet

snippet doc "JSDoc" w
/**
 * ${1}
 * @constructor
 * @param {${2}} ${3} - ${4}
 */
endsnippet

snippet fn "Anonymous function declaration" w
function(${1}) { ${2} }
endsnippet

snippet fnn "Named function declaration" w
function ${1}(${2}) { 
	${3} 
}
endsnippet

snippet for "for (i < n) {...}"
for (var ${2:i}=0; $2<${1:5}; $2++) {
	${3}
}
endsnippet

snippet for "for (i < n.length) {...}"
for (var ${2:i}=0; $2<${1:Things}.length; $2++) {
	${3:$1[$2]}${VISUAL}$0
}
endsnippet

snippet for "for (...) {...} (faster)"
for (var ${2:i}=${1:Things}.length-1; $2>=0; $2--) {
	${3:$1[$2]}${VISUAL}$0
}
endsnippet

snippet pkg "Template package.json file" b
{
	"name": "${1:...}",
	"version": "${2:0.0.1}",
	"private": "true"
}
endsnippet

